name: Release Flow

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]  # Укажите нужную версию Node.js здесь
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Create release branch
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git checkout -b releases/${{ github.run_number }}
        git push origin releases/${{ github.run_number }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Yandex Container Registry
      run: |
        echo "${{ secrets.YANDEX_CLOUD_SA_KEY }}" | docker login -u json_key --password-stdin cr.yandex

    - name: Build and push Docker image
      run: |
        docker build -t cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }} .
        docker tag cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}_latest
        docker push cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}
        docker push cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}_latest

    - name: Create GitHub tag
      run: |
        git tag v${{ github.run_number }}
        git push origin v${{ github.run_number }}

    - name: Get previous release tag
      id: get-previous-tag
      run: echo "::set-output name=prev-tag::$(git describe --tags --abbrev=0 HEAD^)"

    - name: Get list of commits for GitHub Issue
      id: get-commits-issue
      run: echo "::set-output name=commits::$(git log --pretty=format:"%h - %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)"

    - name: Create GitHub Issue
      uses: peter-evans/create-issue-from-file@v2
      with:
        title: Release ${{ github.run_number }}
        content-file: ./release_issue_content.md

    - name: Create issue content file
      run: |
        echo "## Release ${{ github.run_number }}" > ./release_issue_content.md
        echo "**Date**: $(date +%Y-%m-%d)" >> ./release_issue_content.md
        echo "**Author**: ${{ github.actor }}" >> ./release_issue_content.md
        echo "**Version**: ${{ github.run_number }}" >> ./release_issue_content.md
        echo "**Commits**:" >> ./release_issue_content.md
        echo "${{ steps.get-commits-issue.outputs.commits }}" >> ./release_issue_content.md
        echo "**Docker image**: cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}" >> ./release_issue_content.md

    - name: Get list of commits for CHANGELOG
      id: get-commits-changelog
      run: echo "::set-output name=commits::$(git log --pretty=format:"%h - %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)"

    - name: Update CHANGELOG.md
      run: |
        echo "## Release ${{ github.run_number }} - $(date +%Y-%m-%d)" > new_changelog.md
        echo "${{ steps.get-commits-changelog.outputs.commits }}" >> new_changelog.md
        cat CHANGELOG.md >> new_changelog.md
        mv new_changelog.md CHANGELOG.md
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git add CHANGELOG.md
        git commit -m "Update CHANGELOG.md for release ${{ github.run_number }}"
        git push origin HEAD:main
